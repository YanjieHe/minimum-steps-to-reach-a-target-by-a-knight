{"version":3,"sources":["serviceWorker.js","ChessBoard.js","index.js"],"names":["Boolean","window","location","hostname","match","ChessBoard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","sizeOfBoard","knightX","knightY","targetX","targetY","moves","handleClicked","bind","assertThisInitialized","renderBoard","renderChess","hint","x","y","react_default","a","createElement","style","fontSize","event","setState","countMoves","_this2","rows","_loop","i","cols","_loop2","j","push","align","onClick","key","backgroundColor","position","border","dp","Math","abs","x1","y1","x2","y2","min","countSteps","nrows","ncols","result","Array","n","createArray","React","Component","ReactDOM","render","src_ChessBoard_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10df85d3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport './ChessBoard.css'\n\nclass ChessBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizeOfBoard: 8,\n            knightX: -1,\n            knightY: -1,\n            targetX: -1,\n            targetY: -1,\n            moves: -1\n        };\n        this.handleClicked = this.handleClicked.bind(this);\n        this.renderBoard = this.renderBoard.bind(this);\n        this.renderChess = this.renderChess.bind(this);\n        this.hint = this.hint.bind(this);\n    }\n\n    static countSteps(dp, x, y, targetX, targetY) {\n        if (x === targetX && y === targetY) {\n            return dp[0][0];\n        } else {\n            if (dp[Math.abs(x - targetX)][Math.abs(y - targetY)] !== 0) {\n                return dp[Math.abs(x - targetX)][Math.abs(y - targetY)];\n            } else {\n                var x1;\n                var y1;\n                var x2;\n                var y2;\n                if (x <= targetX) {\n                    if (y <= targetY) {\n                        x1 = x + 2;\n                        y1 = y + 1;\n                        x2 = x + 1;\n                        y2 = y + 2;\n                    } else {\n                        x1 = x + 2;\n                        y1 = y - 1;\n                        x2 = x + 1;\n                        y2 = y - 2;\n                    }\n                } else if (y <= targetY) {\n                    x1 = x - 2;\n                    y1 = y + 1;\n                    x2 = x - 1;\n                    y2 = y + 2;\n                } else {\n                    x1 = x - 2;\n                    y1 = y - 1;\n                    x2 = x - 1;\n                    y2 = y - 2;\n                }\n                dp[Math.abs(x - targetX)][Math.abs(y - targetY)] =\n                    Math.min(ChessBoard.countSteps(dp, x1, y1, targetX, targetY),\n                        ChessBoard.countSteps(dp, x2, y2, targetX, targetY)) + 1;\n                dp[Math.abs(y - targetY)][Math.abs(x - targetX)]\n                    = dp[Math.abs(x - targetX)][Math.abs(y - targetY)];\n                return dp[Math.abs(x - targetX)][Math.abs(y - targetY)];\n            }\n        }\n    }\n\n    static createArray(nrows, ncols) {\n        var result = new Array(nrows);\n        for (var i = 0; i < nrows; i++) {\n            result[i] = new Array(ncols)\n        }\n        return result\n    }\n\n    static countMoves(sizeOfBoard, knightX, knightY, targetX, targetY) {\n        let n = sizeOfBoard * sizeOfBoard;\n        let dp = ChessBoard.createArray(sizeOfBoard, sizeOfBoard);\n        for (let i = 0; i < sizeOfBoard; i++) {\n            for (let j = 0; j < sizeOfBoard; j++) {\n                dp[i][j] = 0;\n            }\n        }\n        if ((knightX === 1 && knightY === 1 && targetX === 2 && targetY === 2)\n            || (knightX === 2 && knightY === 2 && targetX === 1 && targetY === 1)) {\n            return 4;\n        } else if ((knightX === 1 && knightY === n && targetX === 2 && targetY === n - 1)\n            || (knightX === 2 && knightY === n - 1 && targetX === 1 && targetY === n)) {\n            return 4;\n        } else if ((knightX === n && knightY === 1 && targetX === n - 1 && targetY === 2)\n            || (knightX === n - 1 && knightY === 2 && targetX === n && targetY === 1)) {\n            return 4;\n        } else if ((knightX === n && knightY === n && targetX === n - 1 && targetY === n - 1)\n            || (knightX === n - 1 && knightY === n - 1 && targetX === n && targetY === n)) {\n            return 4;\n        } else {\n            dp[1][0] = 3;\n            dp[0][1] = 3;\n            dp[1][1] = 2;\n            dp[2][0] = 2;\n            dp[0][2] = 2;\n            dp[2][1] = 1;\n            dp[1][2] = 1;\n\n            return ChessBoard.countSteps(dp, knightX, knightY, targetX, targetY);\n        }\n    }\n\n    renderChess(x, y) {\n        if (x === this.state.knightX && y === this.state.knightY) {\n            return <span style={{\"fontSize\": \"30px\"}}>&#9816;</span>;\n        } else if (x === this.state.targetX && y === this.state.targetY) {\n            return <span style={{\"fontSize\": \"30px\"}}>&#8226;</span>;\n        } else {\n            return \"\";\n        }\n    }\n\n    handleClicked(event, x, y) {\n        if (this.state.knightX === -1) {\n            this.setState(\n                {\n                    knightX: x,\n                    knightY: y\n                }\n            );\n        } else if (this.state.targetX === -1) {\n            if (x === this.state.knightX && y === this.state.knightY) {\n\n            } else {\n                this.setState(\n                    {\n                        targetX: x,\n                        targetY: y\n                    }\n                );\n                let moves = ChessBoard.countMoves(this.state.sizeOfBoard,\n                    this.state.knightX,\n                    this.state.knightY,\n                    x,\n                    y);\n                this.setState({moves: moves});\n            }\n        } else {\n            this.setState({knightX: -1, knightY: -1, targetX: -1, targetY: -1, moves: -1});\n        }\n    }\n\n    renderBoard() {\n        let rows = [];\n        let sizeOfBoard = this.state.sizeOfBoard;\n        for (let i = 0; i < this.state.sizeOfBoard; i++) {\n            let cols = [];\n            for (let j = 0; j < this.state.sizeOfBoard; j++) {\n                if ((i + j) % 2 === 1) {\n                    cols.push(<td align=\"center\"\n                                  onClick={event => this.handleClicked(event, sizeOfBoard - i - 1, sizeOfBoard - j - 1)}\n                                  key={[i, j]}\n                                  style={{\"backgroundColor\": \"grey\"}}>{this.renderChess(sizeOfBoard - i - 1, sizeOfBoard - j - 1)}</td>)\n                } else {\n                    cols.push(<td align=\"center\"\n                                  onClick={event => this.handleClicked(event, sizeOfBoard - i - 1, sizeOfBoard - j - 1)}\n                                  key={[i, j]}\n                                  position={[i, j]}>{this.renderChess(sizeOfBoard - i - 1, sizeOfBoard - j - 1)}</td>)\n                }\n            }\n            rows.push(<tr key={i}>{cols}</tr>);\n        }\n        return rows;\n    }\n\n    hint() {\n        if (this.state.knightX === -1) {\n            return \"Please put a knight\";\n        } else if (this.state.targetX === -1) {\n            return \"Please put a target\";\n        } else {\n            return <span>Number of steps: {this.state.moves}</span>\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <fieldset>\n                    <legend>Minimum steps to reach a target by a Knight</legend>\n                    {this.hint()}\n                    <table border=\"4\">\n                        <tbody>\n                        {this.renderBoard()}\n                        </tbody>\n                    </table>\n                </fieldset>\n            </div>\n        );\n    }\n}\n\nexport default ChessBoard;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ChessBoard from './ChessBoard'\nReactDOM.render(<ChessBoard />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}